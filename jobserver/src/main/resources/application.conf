# Settings for safe local mode development of job server
# These are used as defaults when you do "re-start" within sbt
spark {
  master = "local[4]"

  jobserver {
    port = 8090

    # Number of job results to keep per JobResultActor/context
    job-result-cache-size = 5000

    jobdao = spark.jobserver.io.JobFileDAO

    filedao {
      rootdir = /tmp/spark-jobserver/filedao/data
    }

    # Time out for job server to wait while creating contexts
    context-creation-timeout = 15 s
  }

  # predefined Spark contexts
  # Below is an example, but do not uncomment it.   Everything defined here is carried over to
  # deploy-time configs, so they will be created in all environments.  :(
  contexts {
    # olap-demo {
    #   num-cpu-cores = 4            # Number of cores to allocate.  Required.
    #   memory-per-node = 1024m      # Executor memory per node, -Xmx style eg 512m, 1G, etc.
    # }
    # define additional contexts here
  }

  # Default settings for ad hoc as well as manually created contexts
  context-settings {
    num-cpu-cores = 4           # Number of cores to allocate.  Required.
    memory-per-node = 512m      # Executor memory per node, -Xmx style eg 512m, 1G, etc.
    # dependent-jars = ["rookery-spark"]   # appName for dependent jars to load for entire context
    # max-jobs-per-context = 4  # Max # of jobs to run at the same time
    # coarse-mesos-mode = true  # per-context, rather than per-job, resource allocation
    # rdd-ttl = 24 h            # time-to-live for RDDs in a SparkContext.  Don't specify = forever
  }
}

akka {
  # Use SLF4J/logback for deployed environment logging
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
}

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  # uncomment the next line for making this an HTTPS example
  # ssl-encryption = on
  idle-timeout = 5 s
  request-timeout = 15 s
  pipelining-limit = 2 # for maximum performance (prevents StopReading / ResumeReading messages to the IOBridge)
}